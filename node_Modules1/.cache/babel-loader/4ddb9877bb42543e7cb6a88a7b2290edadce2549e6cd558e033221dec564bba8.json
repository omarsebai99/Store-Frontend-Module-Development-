{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f38ae62\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Product Table\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Title\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Price\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Category\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\"), /*#__PURE__*/_createCommentVNode(\" New column for actions \")])], -1 /* HOISTED */));\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Pagination Controls (if not already included) \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1\n  }, \"Previous\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", null, \"Page \" + _toDisplayString($data.currentPage) + \" of \" + _toDisplayString($options.totalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \"Next\", 8 /* PROPS */, _hoisted_3)]), _createCommentVNode(\" Table \"), _createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [_createCommentVNode(\" Display products for current page \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedProducts, product => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: product.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(product.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.category), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editProduct(product)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","onClick","_cache","args","$options","prevPage","disabled","$data","currentPage","_hoisted_2","_toDisplayString","totalPages","nextPage","_hoisted_3","_hoisted_4","_Fragment","_renderList","displayedProducts","product","key","id","title","price","category","$event","editProduct","_hoisted_5"],"sources":["C:\\Users\\Omar\\Desktop\\New folder\\vue-product-table\\src\\components\\ProductTable.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h2>Product Table</h2>\r\n    \r\n    <!-- Pagination Controls (if not already included) -->\r\n    <div>\r\n    <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\r\n    <span>Page {{ currentPage }} of {{ totalPages }}</span>\r\n    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\r\n    </div>\r\n    \r\n    <!-- Table -->\r\n    <table>\r\n    <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n        <th>Title</th>\r\n        <th>Price</th>\r\n        <th>Category</th>\r\n        <th>Actions</th> <!-- New column for actions -->\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <!-- Display products for current page -->\r\n        <tr v-for=\"product in displayedProducts\" :key=\"product.id\">\r\n        <td>{{ product.id }}</td>\r\n        <td>{{ product.title }}</td>\r\n        <td>{{ product.price }}</td>\r\n        <td>{{ product.category }}</td>\r\n        <td>\r\n            <button @click=\"editProduct(product)\">Edit</button>\r\n        </td>\r\n        </tr>\r\n    </tbody>\r\n    </table>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\nname: 'ProductTable',\r\ndata() {\r\n    return {\r\n    products: [], // All products from API\r\n    currentPage: 1, // Current page number\r\n    itemsPerPage: 5, // Number of items per page\r\n    selectedProduct: null // Track the selected product for editing\r\n    };\r\n},\r\ncomputed: {\r\n    // Calculate total number of pages\r\n    totalPages() {\r\n    return Math.ceil(this.products.length / this.itemsPerPage);\r\n    },\r\n    // Calculate products to display for current page\r\n    displayedProducts() {\r\n    const start = (this.currentPage - 1) * this.itemsPerPage;\r\n    const end = start + this.itemsPerPage;\r\n    return this.products.slice(start, end);\r\n    }\r\n},\r\nmounted() {\r\n    this.fetchProducts();\r\n},\r\nmethods: {\r\n    fetchProducts() {\r\n    axios.get('https://fakestoreapi.com/products')\r\n        .then(response => {\r\n        this.products = response.data;\r\n        })\r\n        .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        });\r\n    },\r\n    // Navigate to previous page\r\n    prevPage() {\r\n    if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n    }\r\n    },\r\n    // Navigate to next page\r\n    nextPage() {\r\n    if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n    }\r\n    },\r\n    // Method to handle editing a product\r\n    editProduct(product) {\r\n    this.selectedProduct = product;\r\n    // Navigate to edit product form route (assuming you have a route set up for editing)\r\n    this.$router.push({ name: 'EditProductForm', params: { id: product.id } });\r\n    }\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Your component-specific styles here */\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAAsB,YAAlB,eAAa;mBAFrB;mBAAA;gEAaIA,mBAAA,CAQQ,gB,aAPJA,mBAAA,CAMK,a,aALLA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAgB,YAAZ,SAAO,G,aAAMC,mBAAA,4BAA+B,C;mBAnBxD;;uBACAC,mBAAA,CAkCM,cAjCFC,UAAsB,EAEtBF,mBAAA,mDAAsD,EACtDD,mBAAA,CAIM,cAHNA,mBAAA,CAAyE;IAAhEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAGG,QAAQ,EAAEC,KAAA,CAAAC,WAAW;KAAQ,UAAQ,iBANpEC,UAAA,GAOIZ,mBAAA,CAAuD,cAAjD,OAAK,GAAAa,gBAAA,CAAGH,KAAA,CAAAC,WAAW,IAAG,MAAI,GAAAE,gBAAA,CAAGN,QAAA,CAAAO,UAAU,kBAC7Cd,mBAAA,CAA8E;IAArEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,QAAA,IAAAR,QAAA,CAAAQ,QAAA,IAAAT,IAAA,CAAQ;IAAGG,QAAQ,EAAEC,KAAA,CAAAC,WAAW,KAAKJ,QAAA,CAAAO;KAAY,MAAI,iBARzEE,UAAA,E,GAWIf,mBAAA,WAAc,EACdD,mBAAA,CAsBQ,gBArBRiB,UAQQ,EACRjB,mBAAA,CAWQ,gBAVJC,mBAAA,uCAA0C,G,kBAC1CC,mBAAA,CAQKgB,SAAA,QAhCbC,WAAA,CAwB8BZ,QAAA,CAAAa,iBAAiB,EAA5BC,OAAO;yBAAlBnB,mBAAA,CAQK;MARqCoB,GAAG,EAAED,OAAO,CAACE;QACvDvB,mBAAA,CAAyB,YAAAa,gBAAA,CAAlBQ,OAAO,CAACE,EAAE,kBACjBvB,mBAAA,CAA4B,YAAAa,gBAAA,CAArBQ,OAAO,CAACG,KAAK,kBACpBxB,mBAAA,CAA4B,YAAAa,gBAAA,CAArBQ,OAAO,CAACI,KAAK,kBACpBzB,mBAAA,CAA+B,YAAAa,gBAAA,CAAxBQ,OAAO,CAACK,QAAQ,kBACvB1B,mBAAA,CAEK,aADDA,mBAAA,CAAmD;MAA1CI,OAAK,EAAAuB,MAAA,IAAEpB,QAAA,CAAAqB,WAAW,CAACP,OAAO;OAAG,MAAI,iBA9BtDQ,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ProductTable',\n  data() {\n    return {\n      products: [],\n      // All products from API\n      currentPage: 1,\n      // Current page number\n      itemsPerPage: 5 // Number of items per page\n    };\n  },\n  computed: {\n    // Calculate total number of pages\n    totalPages() {\n      return Math.ceil(this.products.length / this.itemsPerPage);\n    },\n    // Calculate products to display for current page\n    displayedProducts() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.products.slice(start, end);\n    }\n  },\n  mounted() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      axios.get('https://fakestoreapi.com/products').then(response => {\n        this.products = response.data;\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    },\n    // Navigate to previous page\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    // Navigate to next page\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","products","currentPage","itemsPerPage","computed","totalPages","Math","ceil","length","displayedProducts","start","end","slice","mounted","fetchProducts","methods","get","then","response","catch","error","console","prevPage","nextPage"],"sources":["C:\\Users\\Omar\\Desktop\\New folder\\vue-product-table\\src\\components\\ProductTable.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h2>Product Table</h2>\r\n    \r\n    <!-- Pagination Controls -->\r\n    <div>\r\n    <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\r\n    <span>Page {{ currentPage }} of {{ totalPages }}</span>\r\n    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\r\n    </div>\r\n    \r\n    <!-- Table -->\r\n    <table>\r\n    <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n        <th>Title</th>\r\n        <th>Price</th>\r\n        <th>Category</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <!-- Display products for current page -->\r\n        <tr v-for=\"product in displayedProducts\" :key=\"product.id\">\r\n        <td>{{ product.id }}</td>\r\n        <td>{{ product.title }}</td>\r\n        <td>{{ product.price }}</td>\r\n        <td>{{ product.category }}</td>\r\n        </tr>\r\n    </tbody>\r\n    </table>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\nname: 'ProductTable',\r\ndata() {\r\n    return {\r\n    products: [], // All products from API\r\n    currentPage: 1, // Current page number\r\n    itemsPerPage: 5 // Number of items per page\r\n    };\r\n},\r\ncomputed: {\r\n    // Calculate total number of pages\r\n    totalPages() {\r\n    return Math.ceil(this.products.length / this.itemsPerPage);\r\n    },\r\n    // Calculate products to display for current page\r\n    displayedProducts() {\r\n    const start = (this.currentPage - 1) * this.itemsPerPage;\r\n    const end = start + this.itemsPerPage;\r\n    return this.products.slice(start, end);\r\n    }\r\n},\r\nmounted() {\r\n    this.fetchProducts();\r\n},\r\nmethods: {\r\n    fetchProducts() {\r\n    axios.get('https://fakestoreapi.com/products')\r\n        .then(response => {\r\n        this.products = response.data;\r\n        })\r\n        .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        });\r\n    },\r\n    // Navigate to previous page\r\n    prevPage() {\r\n    if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n    }\r\n    },\r\n    // Navigate to next page\r\n    nextPage() {\r\n    if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n    }\r\n    }\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Your component-specific styles here */\r\n</style>"],"mappings":"AAmCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACfC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACPC,QAAQ,EAAE,EAAE;MAAE;MACdC,WAAW,EAAE,CAAC;MAAE;MAChBC,YAAY,EAAE,EAAE;IAChB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACN;IACAC,UAAUA,CAAA,EAAG;MACb,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACN,QAAQ,CAACO,MAAK,GAAI,IAAI,CAACL,YAAY,CAAC;IAC1D,CAAC;IACD;IACAM,iBAAiBA,CAAA,EAAG;MACpB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACR,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMQ,GAAE,GAAID,KAAI,GAAI,IAAI,CAACP,YAAY;MACrC,OAAO,IAAI,CAACF,QAAQ,CAACW,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACtC;EACJ,CAAC;EACDE,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAa,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACLD,aAAaA,CAAA,EAAG;MAChBhB,KAAK,CAACkB,GAAG,CAAC,mCAAmC,EACxCC,IAAI,CAACC,QAAO,IAAK;QAClB,IAAI,CAACjB,QAAO,GAAIiB,QAAQ,CAAClB,IAAI;MAC7B,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC;IACD;IACAE,QAAQA,CAAA,EAAG;MACX,IAAI,IAAI,CAACpB,WAAU,GAAI,CAAC,EAAE;QACtB,IAAI,CAACA,WAAW,EAAE;MACtB;IACA,CAAC;IACD;IACAqB,QAAQA,CAAA,EAAG;MACX,IAAI,IAAI,CAACrB,WAAU,GAAI,IAAI,CAACG,UAAU,EAAE;QACpC,IAAI,CAACH,WAAW,EAAE;MACtB;IACA;EACJ;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
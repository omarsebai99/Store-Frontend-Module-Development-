{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ProductTable',\n  data() {\n    return {\n      products: [],\n      // All products from API\n      currentPage: 1,\n      // Current page number\n      itemsPerPage: 5,\n      // Number of items per page\n      selectedProduct: null,\n      // Track the selected product for editing\n      showModal: false // Flag to control modal visibility\n    };\n  },\n  computed: {\n    // Calculate total number of pages\n    totalPages() {\n      return Math.ceil(this.products.length / this.itemsPerPage);\n    },\n    // Calculate products to display for current page\n    displayedProducts() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.products.slice(start, end);\n    }\n  },\n  mounted() {\n    this.fetchProducts();\n  },\n  methods: {\n    fetchProducts() {\n      axios.get('https://fakestoreapi.com/products').then(response => {\n        this.products = response.data;\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    },\n    // Navigate to previous page\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    // Navigate to next page\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    // Method to handle editing a product\n    editProduct(product) {\n      this.selectedProduct = product;\n      // Navigate to edit product form route (assuming you have a route set up for editing)\n      this.$router.push({\n        name: 'EditProductForm',\n        params: {\n          id: product.id\n        }\n      });\n    },\n    // Method to confirm deletion and show modal\n    confirmDelete(product) {\n      this.selectedProduct = product;\n      this.showModal = true;\n    },\n    // Method to close modal\n    closeModal() {\n      this.showModal = false;\n    },\n    // Method to delete product\n    deleteProduct() {\n      if (this.selectedProduct) {\n        const productId = this.selectedProduct.id;\n        // Replace with actual API call to delete product\n        axios.delete(`https://fakestoreapi.com/products/${productId}`)\n        // eslint-disable-next-line no-unused-vars\n        .then(response => {\n          // Remove product from local data after successful deletion\n          this.products = this.products.filter(p => p.id !== productId);\n          this.closeModal(); // Close modal after deletion\n        }).catch(error => {\n          console.error('Error deleting product:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","products","currentPage","itemsPerPage","selectedProduct","showModal","computed","totalPages","Math","ceil","length","displayedProducts","start","end","slice","mounted","fetchProducts","methods","get","then","response","catch","error","console","prevPage","nextPage","editProduct","product","$router","push","params","id","confirmDelete","closeModal","deleteProduct","productId","delete","filter","p"],"sources":["C:\\Users\\Omar\\Desktop\\task\\Frontend Task\\vue-product-table\\src\\components\\ProductTable.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h2>Product Table</h2>\r\n    \r\n    <!-- Pagination Controls (if not already included) -->\r\n    <div>\r\n    <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\r\n    <span>Page {{ currentPage }} of {{ totalPages }}</span>\r\n    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\r\n    </div>\r\n    \r\n    <!-- Table -->\r\n    <table>\r\n    <thead>\r\n        <tr>\r\n        <th>ID</th>\r\n        <th>Title</th>\r\n        <th>Price</th>\r\n        <th>Category</th>\r\n        <th>Actions</th> <!-- New column for actions -->\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <!-- Display products for current page -->\r\n        <tr v-for=\"product in displayedProducts\" :key=\"product.id\">\r\n        <td>{{ product.id }}</td>\r\n        <td>{{ product.title }}</td>\r\n        <td>{{ product.price }}</td>\r\n        <td>{{ product.category }}</td>\r\n        <td>\r\n            <button @click=\"editProduct(product)\">Edit</button>\r\n            <button @click=\"confirmDelete(product)\">Delete</button>\r\n        </td>\r\n        </tr>\r\n    </tbody>\r\n    </table>\r\n    \r\n    <!-- Modal for delete confirmation -->\r\n    <div v-if=\"showModal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <p>Are you sure you want to delete this product?</p>\r\n        <button @click=\"deleteProduct\">Delete</button>\r\n    </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\nname: 'ProductTable',\r\ndata() {\r\n    return {\r\n    products: [], // All products from API\r\n    currentPage: 1, // Current page number\r\n    itemsPerPage: 5, // Number of items per page\r\n    selectedProduct: null, // Track the selected product for editing\r\n    showModal: false // Flag to control modal visibility\r\n    };\r\n},\r\ncomputed: {\r\n    // Calculate total number of pages\r\n    totalPages() {\r\n    return Math.ceil(this.products.length / this.itemsPerPage);\r\n    },\r\n    // Calculate products to display for current page\r\n    displayedProducts() {\r\n    const start = (this.currentPage - 1) * this.itemsPerPage;\r\n    const end = start + this.itemsPerPage;\r\n    return this.products.slice(start, end);\r\n    }\r\n},\r\nmounted() {\r\n    this.fetchProducts();\r\n},\r\nmethods: {\r\n    fetchProducts() {\r\n    axios.get('https://fakestoreapi.com/products')\r\n        .then(response => {\r\n        this.products = response.data;\r\n        })\r\n        .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        });\r\n    },\r\n    // Navigate to previous page\r\n    prevPage() {\r\n    if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n    }\r\n    },\r\n    // Navigate to next page\r\n    nextPage() {\r\n    if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n    }\r\n    },\r\n    // Method to handle editing a product\r\n    editProduct(product) {\r\n    this.selectedProduct = product;\r\n    // Navigate to edit product form route (assuming you have a route set up for editing)\r\n    this.$router.push({ name: 'EditProductForm', params: { id: product.id } });\r\n    },\r\n    // Method to confirm deletion and show modal\r\n    confirmDelete(product) {\r\n    this.selectedProduct = product;\r\n    this.showModal = true;\r\n    },\r\n    // Method to close modal\r\n    closeModal() {\r\n    this.showModal = false;\r\n    },\r\n    // Method to delete product\r\n    deleteProduct() {\r\n    if (this.selectedProduct) {\r\n        const productId = this.selectedProduct.id;\r\n        // Replace with actual API call to delete product\r\n        axios.delete(`https://fakestoreapi.com/products/${productId}`)\r\n        // eslint-disable-next-line no-unused-vars\r\n        .then(response => {\r\n            // Remove product from local data after successful deletion\r\n            this.products = this.products.filter(p => p.id !== productId);\r\n            this.closeModal(); // Close modal after deletion\r\n        })\r\n        .catch(error => {\r\n            console.error('Error deleting product:', error);\r\n        });\r\n    }\r\n    }\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Your component-specific styles here */\r\n.modal {\r\ndisplay: block; /* Ensure modal is displayed */\r\nposition: fixed;\r\nz-index: 1;\r\nleft: 0;\r\ntop: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\noverflow: auto;\r\nbackground-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\nbackground-color: #fefefe;\r\nmargin: 15% auto;\r\npadding: 20px;\r\nborder: 1px solid #888;\r\nwidth: 80%;\r\n}\r\n\r\n.close {\r\ncolor: #aaa;\r\nfloat: right;\r\nfont-size: 28px;\r\nfont-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\ncolor: black;\r\ntext-decoration: none;\r\ncursor: pointer;\r\n}\r\n</style>"],"mappings":"AAiDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACfC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACPC,QAAQ,EAAE,EAAE;MAAE;MACdC,WAAW,EAAE,CAAC;MAAE;MAChBC,YAAY,EAAE,CAAC;MAAE;MACjBC,eAAe,EAAE,IAAI;MAAE;MACvBC,SAAS,EAAE,KAAI,CAAE;IACjB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACN;IACAC,UAAUA,CAAA,EAAG;MACb,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACR,QAAQ,CAACS,MAAK,GAAI,IAAI,CAACP,YAAY,CAAC;IAC1D,CAAC;IACD;IACAQ,iBAAiBA,CAAA,EAAG;MACpB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACV,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMU,GAAE,GAAID,KAAI,GAAI,IAAI,CAACT,YAAY;MACrC,OAAO,IAAI,CAACF,QAAQ,CAACa,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACtC;EACJ,CAAC;EACDE,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAa,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACLD,aAAaA,CAAA,EAAG;MAChBlB,KAAK,CAACoB,GAAG,CAAC,mCAAmC,EACxCC,IAAI,CAACC,QAAO,IAAK;QAClB,IAAI,CAACnB,QAAO,GAAImB,QAAQ,CAACpB,IAAI;MAC7B,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC;IACD;IACAE,QAAQA,CAAA,EAAG;MACX,IAAI,IAAI,CAACtB,WAAU,GAAI,CAAC,EAAE;QACtB,IAAI,CAACA,WAAW,EAAE;MACtB;IACA,CAAC;IACD;IACAuB,QAAQA,CAAA,EAAG;MACX,IAAI,IAAI,CAACvB,WAAU,GAAI,IAAI,CAACK,UAAU,EAAE;QACpC,IAAI,CAACL,WAAW,EAAE;MACtB;IACA,CAAC;IACD;IACAwB,WAAWA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACvB,eAAc,GAAIuB,OAAO;MAC9B;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAE9B,IAAI,EAAE,iBAAiB;QAAE+B,MAAM,EAAE;UAAEC,EAAE,EAAEJ,OAAO,CAACI;QAAG;MAAE,CAAC,CAAC;IAC1E,CAAC;IACD;IACAC,aAAaA,CAACL,OAAO,EAAE;MACvB,IAAI,CAACvB,eAAc,GAAIuB,OAAO;MAC9B,IAAI,CAACtB,SAAQ,GAAI,IAAI;IACrB,CAAC;IACD;IACA4B,UAAUA,CAAA,EAAG;MACb,IAAI,CAAC5B,SAAQ,GAAI,KAAK;IACtB,CAAC;IACD;IACA6B,aAAaA,CAAA,EAAG;MAChB,IAAI,IAAI,CAAC9B,eAAe,EAAE;QACtB,MAAM+B,SAAQ,GAAI,IAAI,CAAC/B,eAAe,CAAC2B,EAAE;QACzC;QACAjC,KAAK,CAACsC,MAAM,CAAC,qCAAqCD,SAAS,EAAE;QAC7D;QAAA,CACChB,IAAI,CAACC,QAAO,IAAK;UACd;UACA,IAAI,CAACnB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACoC,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACP,EAAC,KAAMI,SAAS,CAAC;UAC7D,IAAI,CAACF,UAAU,CAAC,CAAC,EAAE;QACvB,CAAC,EACAZ,KAAK,CAACC,KAAI,IAAK;UACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACnD,CAAC,CAAC;MACN;IACA;EACJ;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}